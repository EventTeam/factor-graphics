;;;node code
(define noise-params (pair .2 .2))
;;set-growth/label-noise! won't work as desired until eval uses current-envirnoment instead of loading factor-graph.church each time 
(define (set-growth-noise! new-val) (set-car! noise-params new-val))  
(define (set-label-noise! new-val) (set-cdr! noise-params new-val))
(define growth-noise first)
(define label-noise rest)
(define labels '(a b))

(define root '(a))

;;;assumes all node information comes in a list as item0 e.g. (node '(label distance angle) children) where children is a list of nodes
(define node
  (lazify 
   (lambda (item0 . items)
     (if (null? items)
         (lazy-pair (noisy-label item0) '())
         (lazy-pair (noisy-label item0) (if (flip (- 1 (growth-noise noise-params)))
                                            (apply node items)
                                            '()))))))


(define noisy-label
  (lazify
   (lambda (x)
     (if (list? x)
         (if (symbol? (first x))
             (if (flip (- 1 (label-noise noise-params)))
                 x
                 (let ([label (first x)]
                       [geometry (rest x)])
                   (if (equal? label 'a)
                       (pair 'b geometry)
                       (pair 'a geometry))))
             x)
         x))))



(define (graph->program graph)
  (if (null? graph)
      '()
      (append (list 'node (list 'quote (first graph)))
              (map graph->program (rest graph)))))

(define (forward-sample fg-program)
  (let* ([factor-graph (lazy-list->all-list (eval fg-program))])
    (pretty-print factor-graph)
    (fg->image factor-graph)))
         
    