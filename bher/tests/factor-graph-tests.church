(define samples 50)
(define runs 1)
(define error-tolerance 0.07)

(define check-test (make-check-test-with-runs runs))

;;;single node test
(check-test (lambda ()
              (repeat samples (lambda () (lazy-list->all-list (eval '(node 'a 3 4))))))
            (lambda (x) (if (eq? (first x) 'a) 1 0))
            (- 1 (label-noise noise-params))
            error-tolerance
            "single node test")

;;;line test
(set-label-noise! 0)
(set-growth-noise! 0)
(equal?-test "line test"
            (lazy-list->all-list (node 'a 3 4 (node 'b 5 10)))
            '(a 3 4 (b 5 10)))

;;;line that branches
(set-label-noise! 0)
(set-growth-noise! 0)
(equal?-test "line that branches test"
            (lazy-list->all-list (node 'a 3 4 (node 'b 5 10 (node 'c 5 10) (node 'c 5 10))))
            '(a 3 4 (b 5 10 (c 5 10) (c 5 10))))


(forward-sample '(node 'a 3 4 (node 'b 5 10)))

